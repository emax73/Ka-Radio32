Version 1.4 allows you to configure gpio's and two custom IR keys per action.
This allows you to take advantage of the standard software even if your port configuration and/or your remote control are not the same.
The configuration must be specified in a csv file. A template is given by the pattern.csv file
The default configuration of the current software is in the standard_adb.csv file.
A csv file is interpreted by a utility to generate a bin file that must be flashed at 0x3a2000 one time per esp32

Implementation:
---------------
The msys32 and KaRadio32 environment must be operational.

1/ Prerequisite
---------------
First, make sure you have an updated partitions.bin file.
This file contains the system partitions:

$ make partition_table
Toolchain path: /opt/xtensa-esp32-elf/bin/xtensa-esp32-elf-gcc
Toolchain version: crosstool-ng-1.22.0-80-g6c4433a5
Compiler version: 5.2.0
Python requirements from C:/msys32/home/jp/esp/esp-idf/requirements.txt are satisfied.
Partition table binary generated. Contents:
*******************************************************************************
# Espressif ESP32 Partition Table
# Name, Type, SubType, Offset, Size, Flags
nvs,data,nvs,0x9000,16K,
otadata,data,ota,0xd000,8K,
phy_init,data,phy,0xf000,4K,
ota_0,app,ota_0,0x10000,1792K,
ota_1,app,ota_1,0x1d0000,1792K,
device,64,0,0x390000,4K,
stations,65,0,0x391000,64K,
device1,66,0,0x3a1000,4K,
hardware,data,nvs,0x3a2000,8K,
*******************************************************************************
Partition flashing command:
python /home/jp/esp/esp-idf/components/esptool_py/esptool/esptool.py --chip esp32 --port com5 --baud 460800 --before default_reset --after hard_reset write_flash 0x800
************************************************ *****************************

Compared to an old version, it adds the declaration of the partition "hardware" which interests us.


2/ Definition of gpio's
-----------------------
Rename the pattern.csv file with the name of your card, for example lolin32.csv
Edit this file to enter your gpio definitions.
Only modify the lines beginning with P_ by modifying only the last number.
for example
P_MISO, data,u8,19
Change 19 to the desired number.
Do this for all P_ lines.
Never change "P_XXXX, data,u8,"

#Special cases:
---------------
1- SPI bus;
   K_SPI,data,u8,2
   2 is the spi VSPI_HOST (default)
   1 is the spi HSPI_HOST

2- Encoders
If P_ENC0_A = 255 the encoder is disabled (not used, the gpio's may be reused elsewhere).
If P_ENC1_A = 255 the encoder is disabled (not used, the gpio's may be reused elsewhere).

Encoder0 the volume control and stations change when pushed and held,
Encoder1 the station control and volume change when pushed and heldi.

3- I2C
If I2C is not used (spi lcd) the gpio of the i2C can be reused elsewhere.

4- VS1053b
If not used P_XCS must be set to 255. Gpio of P_RST P_XDCS P_DREQ may be reused elsewhere.

5- If IR remote control is not used P_IR_SIGNAL must be set to 255

6- If the ADC keyboard is missing, set P_ADC  to 255.

3/ IR key definitions
---------------------
If you use a remote control with different codes from the default ones, you can give your codes by key.
Two codes per key are possible:

For example for the K_OK key
K_OK, data, string, 0xFF0040 0xFF0040
or
K_OK, data, string, 0xFF0040
if you only have one code per key.
or
K_OK, data, string,
if no code is given for the OK key

Never change "K_XXXX,data,string,"

Reminder: to see the code of a key on your remote control, change the log level to sys.logi
Press a key and see the log. You will see something like that:
I (1204396) addon: IR event: Channel: 0, ADDR: ff00, CMD: bf40 = FF0040, REPEAT: 0
Where FF0040 is the 0xFF0040 code needed.

The keys and actions are:
K_UP  		Change to next Station 
K_LEFT		Volume Down -5
K_OK		Toggle play/Stop
K_RIGHT		Volume up +5
K_DOWN		Change to previous station
K_0			Enter number of the wanted station
K_1			Enter number of the wanted station
K_2			Enter number of the wanted station
K_3			Enter number of the wanted station
K_4			Enter number of the wanted station
K_5			Enter number of the wanted station
K_6			Enter number of the wanted station
K_7			Enter number of the wanted station
K_8			Enter number of the wanted station
K_9			Enter number of the wanted station
K_STAR		Play
K_DIESE		Stop
K_INFO		Toggle time/info display

No comment is allowed in this csv file.
Save the csv file.


4/ Generation of the bin
------------------------
Start the command
./nvs_partition_generator.sh yourname
to generate build/yourname.bin

For example ./nvs_partition_generator.sh standard_adb
generates the build/standard_adb.bin file from the standard_adb.csv file

$ ./nvs_partition_generator.sh standard_adb
python ../esp-idf/components/nvs_flash/nvs_partition_generator/nvs_partition_gen.py standard_adb.csv build/standard_adb.bin 8KB
done



5/ Flash bin
------------
With ESP DOWNLOAD TOOL or esptool.py command at address, 0x3a2000

It seems that there is a problem with this ESP DOWNLOAD TOOL for flashing the bin alone.
In case of problem, flash it with another bin (bootloader.bin or KaRadio32.bin)
 

This binary is to flash one time and on each modification of the csv.


Now you can enjoy the standart OTA.

JP 2018